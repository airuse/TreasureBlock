server:
  host: "localhost"  # 域名
  port: 8443
  protocol: "https"
  environment: "development"  # 新增环境标识，当 production 时用的是线上环境 development 是本地环境
  # api_key: "ak_c9da22f76fa7a6870b10b2f074db1b31"
  # secret_key: "sk_7cad6309637b7c0c374c9974c68a0beeb65ca80093ea4c4bc60a04181eb1f5fa"
  api_key: "ak_531afe50ef47457b9784916bd12fd93d"
  secret_key: "sk_70833628875a73e97a96cbe5585530b092d08dcbba0f816956b99428ba79f15f"
  # # HTTPS相关配置
  tls:
    enabled: true
    skip_verify: true
    ca_cert: "../server/certs/localhost.crt"

blockchain:
  chains:
    # btc:
    #   name: "Bitcoin"
    #   symbol: "BTC"
    #   decimals: 8
    #   enabled: true
    #   rpc_url: "http://192.168.1.70:8332"
    #   explorer_api_urls:
    #     - "https://alpha-clean-yard.btc.quiknode.pro/7979488c04b1a36bdc4230b23e3eaac3e9c1c1af"
    #   api_key: ""
    #   username: "bitcoin"      # bitcoind RPC用户名
    #   password: "bitcoin123"  # bitcoind RPC密码
    #   # BTC链特定的扫描配置
    #   scan:
    #     enabled: true
    #     interval: 10s
    #     max_retries: 3
    #     retry_delay: 5s
    #     confirmations: 6
    #     start_block_height: 0
    #     auto_start: true
    #     save_to_file: false
    #     output_dir: "./output/btc"
    #     priority: 1  # 高优先级
    #     max_concurrent: 5
    #     block_timeout: 30s
    #     rescan_interval: 60s
    #     enable_mempool: true
    #     mempool_interval: 5s
    eth:
      name: "Ethereum"
      symbol: "ETH"
      decimals: 18
      enabled: true
      # rpc_url: "http://192.168.1.70:8545"
      explorer_api_urls:
        - "https://ethereum-mainnet.core.chainstack.com/5611e99c47d7d01ba133c23ee3064020"
        - "https://ethereum-mainnet.core.chainstack.com/7ba518d6ccef2034775a9184a898fa3c"
        - "https://ethereum-mainnet.core.chainstack.com/f128085e44a144c3a63295011a716628"
        - "https://ethereum-mainnet.core.chainstack.com/7940b16771bdfe19340899e9a975604e"
        - "https://ethereum-mainnet.core.chainstack.com/9f3263672e76b307af91917e8aea47b1"
        - "https://ethereum-mainnet.core.chainstack.com/483d27c712e9d3f5adae3ef60246529c"
        - "https://ethereum-mainnet.core.chainstack.com/1c17a8ff6bcf6cd6371f97c5310963c8"
        - "https://ethereum-mainnet.core.chainstack.com/34e69fc33d3f9cbbdc1e0cbcf30e8f11"
        - "https://ethereum-mainnet.core.chainstack.com/f88c0e02c0f9f38c4880701a44fa0133"
        - "https://ethereum-mainnet.core.chainstack.com/92b0739e8f73e3d79e79f13f46f5f8ec"
        - "https://ethereum-mainnet.core.chainstack.com/fa00dae894f9dd1b7b4a530d83a83bd7"
        - "https://ethereum-mainnet.core.chainstack.com/5611e99c47d7d01ba133c23ee3064020"
        - "https://ethereum-mainnet.core.chainstack.com/7ba518d6ccef2034775a9184a898fa3c"
        - "https://ethereum-mainnet.core.chainstack.com/f128085e44a144c3a63295011a716628"
        - "https://ethereum-mainnet.core.chainstack.com/7940b16771bdfe19340899e9a975604e"
        - "https://ethereum-mainnet.core.chainstack.com/9f3263672e76b307af91917e8aea47b1"
        - "https://ethereum-mainnet.core.chainstack.com/483d27c712e9d3f5adae3ef60246529c"
        - "https://ethereum-mainnet.core.chainstack.com/1c17a8ff6bcf6cd6371f97c5310963c8"
        - "https://ethereum-mainnet.core.chainstack.com/34e69fc33d3f9cbbdc1e0cbcf30e8f11"
        - "https://ethereum-mainnet.core.chainstack.com/f88c0e02c0f9f38c4880701a44fa0133"
        - "https://ethereum-mainnet.core.chainstack.com/92b0739e8f73e3d79e79f13f46f5f8ec"
        - "https://ethereum-mainnet.core.chainstack.com/fa00dae894f9dd1b7b4a530d83a83bd7"
        - "https://eth-mainnet.g.alchemy.com/v2/9N4BtDqjALaxGX12hcbvC"
        - "https://eth-mainnet.g.alchemy.com/v2/A8Rr89_Bm2O0RSIxhjJ8a"
        - "https://lb.drpc.org/ethereum/ApP8VmV0NEYMjrj0PYgtupww_Sq7gh4R8JPvIgaNGuYu"
        - "https://lb.drpc.org/ethereum/AhSgyzb6VUrWuIkUTrjgi3J2NuwCgh0R8JPuIgaNGuYu"
        - "https://lb.drpc.org/ethereum/Aqh3uZvhdU5oq84o63-TeYsfZaTxgbgR8JO5IgaNGuYu"
        - "https://lb.drpc.org/ethereum/AhCf0-Tte050nUVwFHF_1jOCF6QNgh8R8JPxIgaNGuYu"
        - "https://lb.drpc.org/ethereum/AvPPIhOf-k4jldkwixy1QT3s8w99gisR8JP8IgaNGuYu"
        - "https://lb.drpc.org/ethereum/AmpXsFj_D07JqDZ-Hv-nsjkUBedLgiAR8JPzIgaNGuYu"
        - "https://lb.drpc.org/ethereum/AjrnZKmTu0IgpPhzqbPO3unPKlTcgiAR8JP2IgaNGuYu"
        - "https://lb.drpc.org/ethereum/AnmJBrEnm0lsmXo0LnCNva9dh3zRgiER8JP3IgaNGuYu"
        - "https://lb.drpc.org/ethereum/AuM84m0TIkfQkaEYg8VtRn_SdzxVgiER8JP4IgaNGuYu"
        - "https://lb.drpc.org/ethereum/Ao-bi6VwUUYesmsBczwFkxqJJNtrgiIR8JP5IgaNGuYu"
        - "https://lb.drpc.org/ethereum/AgBSgHwcLEI4quCpnDNHMBeev_UPgiMR8JP6IgaNGuYu"
        - "https://newest-ultra-friday.quiknode.pro/7091d98af3809c189285739c3f4141b94f368fff"
        - "https://yolo-smart-tree.quiknode.pro/52836b8f979fca7325258c42925d6c245ca45079"
        - "https://thrilling-summer-frost.quiknode.pro/ca8e71700184f645a7935acf1487acd191e429a1"
        - "https://warmhearted-bold-emerald.quiknode.pro/be4e6633f9443a4dd26046d40be1650a810db3a1"
        - "https://empty-hardworking-spree.quiknode.pro/d1cb31945987ed11caa6f3e63c2b8b86b00d41ff"
        - "https://solemn-purple-river.quiknode.pro/93a62baaa6ed6004344fca98ff7f05f8f0a12ae1"

      api_key: ""  # 如果需要的话
      username: ""
      password: ""
      # 配置的币种地址列表（已知的合约地址）
      token_addresses:
        - "0xA0b86a33E6441b8c4C8C0C4b0c4b0c4b0c4b0c4b"  # 示例：USDT合约地址
        - "0xB0b86a33E6441b8c4C8C0C4b0c4b0c4b0c4b0c4b"  # 示例：USDC合约地址    
      # ETH链特定的扫描配置
      scan:
        enabled: true                # 是否启用ETH链扫描
        interval: 1s                 # 扫描区块的时间间隔
        max_retries: 3               # 区块扫描失败时的最大重试次数
        retry_delay: 3s              # 重试间隔时间
        confirmations: 61            # 需要等待的区块确认数
        auto_start: true             # 启动时是否自动开始扫描
        save_to_file: false          # 是否将扫描结果保存到文件
        output_dir: "./output/eth"   # 扫描结果输出目录
        priority: 2                  # 扫描任务优先级（2为中等优先级）
        max_concurrent: 40            # 最大并发扫描区块数
        block_timeout: 45s           # 单个区块扫描超时时间
        rescan_interval: 120s        # 重新扫描的时间间隔
        enable_mempool: true         # 是否启用内存池（mempool）扫描
        mempool_interval: 10s        # 内存池扫描的时间间隔

log:
  level: "info"
  format: "json"
  output: "stdout"
  file:
    enabled: false
    path: "./logs/scanner.log"
    max_size: 100
    max_age: 30
    max_backups: 10

database:
  driver: "sqlite"
  host: "localhost"
  port: 3306
  username: ""
  password: ""
  dbname: "scanner.db"
  enabled: false


